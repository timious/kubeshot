provider "aws" {
  region = "us-west-1"
}

# Create an S3 bucket
resource "aws_s3_bucket" "data_bucket" {
  bucket = "my-data-bucket"
  acl    = "private"
}

# Create a Lambda function
resource "aws_lambda_function" "json_to_csv" {
  filename      = "lambda_function_payload.zip"
  function_name = "json_to_csv"
  role          = aws_iam_role.lambda_exec.arn
  handler       = "index.handler"
  runtime       = "python3.8"
}

# Allow S3 bucket to trigger Lambda function
resource "aws_lambda_permission" "with_s3" {
  statement_id  = "AllowExecutionFromS3Bucket"
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.json_to_csv.function_name
  principal     = "s3.amazonaws.com"
  source_arn    = aws_s3_bucket.data_bucket.arn
}

# S3 bucket event to trigger Lambda function
resource "aws_s3_bucket_notification" "bucket_notification" {
  bucket = aws_s3_bucket.data_bucket.id

  lambda_function {
    lambda_function_arn = aws_lambda_function.json_to_csv.arn
    events              = ["s3:ObjectCreated:*"]
  }
}

# IAM role for Lambda
resource "aws_iam_role" "lambda_exec" {
  name = "lambda_exec_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "sts:AssumeRole",
        Principal = {
          Service = "lambda.amazonaws.com"
        },
        Effect = "Allow",
      },
    ]
  })
}

# IAM policy for Lambda to read S3, write to Quicksight, and send SNS notifications
resource "aws_iam_role_policy" "lambda_s3_quicksight_sns" {
  name = "lambda_s3_quicksight_sns"
  role = aws_iam_role.lambda_exec.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Action = ["s3:GetObject", "quicksight:*", "sns:Publish"],
        Resource = "*"
      }
    ]
  })
}

# SNS topic for notifications
resource "aws_sns_topic" "notifications" {
  name = "report-notifications"
}
